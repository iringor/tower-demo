---
- name: Post Installation Steps for New Oracle 8.5
  hosts: tsansed1
  gather_facts: no
  vars_files:
    - vars.yml
  tasks:
    - name: Install bind-utils, nmap, chrony
      ansible.builtin.yum:
        name:
          - bind-utils
          - nmap
          - chrony
        state: latest

    - name: Insert local time server to chrony.conf
      lineinfile:
        path: /etc/chrony.conf
        line: "server 167.174.145.248"
        insertbefore: "^pool 2.pool.ntp.org iburst"
      notify: restart chronyd

    - name: Modify group 'games'
      command: groupmod -g 25 games

    - name: Check if group 'techsupp' exists
      command: getent group techsupp
      register: group_check
      ignore_errors: true

    - name: Add group 'techsupp' if it does not exist
      command: groupadd -g 20 techsupp
      when: group_check.rc != 0

    - name: Ensure oddjob, sssd, openldap-clients, sssd-ldap, and openssl-perl are installed
      yum:
        name: "{{ item }}"
        state: present
      with_items:
        - sssd
        - oddjob-mkhomedir
        - openldap-clients
        - sssd-ldap
        - openssl-perl

    - name: Ensure sssd and oddjob are enabled and running
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      with_items:
        - sssd
        - oddjobd

    - name: Copy ymus-NTCAR2-SHA256.cer to target host
      ansible.builtin.copy:
        src: ymus-NTCAR2-SHA256.cer
        dest: /etc/pki/ca-trust/source/anchors/ymus-NTCAR2-SHA256.cer
        owner: root
        group: root
        mode: 0644
      
    - name: Copy ymus.conf to target host
      ansible.builtin.copy:
        src: ymus.conf
        dest: /etc/sssd/conf.d/ymus.conf
        owner: root
        group: root
        mode: 0600

    - name: Run authselect command
      shell: authselect select sssd with-mkhomedir --force
    
    - name: Restart oddjobd service
      systemd:
        name: oddjobd
        state: restarted

    - name: Restart sssd service
      systemd:
        name: sssd
        state: restarted

    - name: Get user tss
      shell: "/usr/bin/getent passwd | grep tss"
      register: tss_user

    - name: Debug output for AD Integration
      debug:
        msg: "{{ tss_user.stdout }}"

    - name: Install make, sendmail, sendmail-cf, and mailx
      dnf:
        name: "{{ item }}"
        state: present
      loop:
        - make
        - sendmail
        - sendmail-cf
        - mailx

    - name: Modify SMART_HOST in sendmail.mc
      ansible.builtin.shell:
        cmd: sed -i "s|dnl define(\`SMART_HOST', \`smtp.your.provider')dnl|define(\`SMART_HOST', \`{{ SMTPRelay }}')|g" /etc/mail/sendmail.mc

    - name: Run make command in /etc/mail
      ansible.builtin.command:
        cmd: make -C /etc/mail

    - name: Validate DS setting in sendmail.cf
      ansible.builtin.command:
        cmd: grep DS{{ SMTPRelay }} /etc/mail/sendmail.cf
      register: ds_check
      ignore_errors: true  # Ignore errors if the line is not found

    - name: Print result
      ansible.builtin.debug:
        msg: "DSntrelay1.ymus.yamaha-motor.com is {{ 'present' if ds_check.rc == 0 else 'not present' }}"

    - name: Enable and start sendmail service
      ansible.builtin.systemd:
        name: sendmail.service
        state: started
        enabled: yes

    - name: Send a test email
      ansible.builtin.shell:
        cmd: "echo test | mailx -s TestMail {{ ILR_email }}"

    - name: Append aliases for root in /etc/aliases
      ansible.builtin.lineinfile:
        path: /etc/aliases
        line: "root:           {{ EBC_email }},{{ RPA_email }}"
        insertafter: EOF  # Ensure the line is appended at the end of the file
        backup: yes

    - name: Run newaliases
      ansible.builtin.command:
        cmd: newaliases

    - name: Enable ol8_codeready_builder repository
      ansible.builtin.command:
        cmd: dnf config-manager --enable ol8_codeready_builder*

    - name: Display enabled repositories after enabling ol8_codeready_builder
      ansible.builtin.command:
        cmd: dnf repolist enabled

    - name: Install xorg-x11-apps package
      ansible.builtin.package:
        name: xorg-x11-apps
        state: present

    - name: Download EPEL GPG key
      ansible.builtin.get_url:
        url: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-8
        dest: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-8

    - name: Import EPEL GPG key
      ansible.builtin.shell:
        cmd: rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-8

    - name: Install EPEL repository package
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
        state: present

    - name: Install additional packages
      package:
        name:
          - bind-utils
          - strace
          - lsof
          - net-tools
          - zip
          - unzip
          - tcpdump
          - bash-completion
          - htop
          - nmon
          - nfs-utils
          - autofs
          - nmap-ncat
          - wget
          - libnsl
        state: present

    - name: Create directory /scratch
      file:
        path: /scratch
        state: directory

    - name: Copy auto.direct to target host
      ansible.builtin.copy:
        src: auto.direct
        dest: /etc/auto.direct
        owner: root
        group: root
        mode: 0644

    - name: Modify auto.master file
      ansible.builtin.command: "sed -i 's/^+auto\\.master/#&\\n\\/\\-      \\/etc\\/auto.direct/' /etc/auto.master"

    - name: Edit /etc/exports
      lineinfile:
        path: /etc/exports
        line: "/tmp *(rw,no_root_squash)"
        insertafter: EOF

    - name: Export /tmp directory
      command: exportfs -av

    - name: Stop and disable firewalld
      systemd:
        name: firewalld
        state: stopped
        enabled: false

    - name: Enable NFS server service
      ansible.builtin.systemd:
        name: nfs-server.service
        enabled: yes

    - name: Start NFS server service
      ansible.builtin.systemd:
        name: nfs-server.service
        state: started

    - name: Check if rpcbind service is running
      ansible.builtin.shell: systemctl is-active rpcbind.service
      register: rpcbind_status
      changed_when: false
      ignore_errors: true

    - name: Start rpcbind service if not running
      ansible.builtin.systemd:
        name: rpcbind.service
        state: started
      when: rpcbind_status.rc != 0

    - name: Enable and start autofs service
      ansible.builtin.systemd:
        name: autofs.service
        state: started
        enabled: yes

  handlers:
    - name: restart chronyd
      systemd:
        name: chronyd
        state: restarted